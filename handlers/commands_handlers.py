from aiogram import Router, F
from aiogram.filters import Command
from aiogram.filters import or_f
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton
from aiogram.utils.formatting import as_list, as_marked_section, Bold, as_key_value, HashTag, Code, Text
from aiogram.utils.keyboard import InlineKeyboardBuilder

router = Router()


@router.message(or_f(Command("help", "?", "commands"),
                     F.text.regexp(r"(?i)(.*–¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã)|(.*–ø–æ–º–æ—â—å.* –±–æ—Ç)|(.*—Å–ø–∏—Å–æ–∫.* –∫–æ–º–∞–Ω–¥)")))
async def help_command(message: Message):
    await main_commands(message, True)


@router.callback_query(F.data.startswith("back_to_main"))
async def back_to_main(callback: CallbackQuery):
    await main_commands(callback.message, False)


async def main_commands(message, is_new: bool):
    content = as_list(
        f"–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–∫–æ–≤–æ—á–Ω—ã—Ö –º–µ—Å—Ç!",
        f"–î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –µ–º—É –≤ —á–∞—Ç.",
        HashTag("#commands"),
        sep="\n\n",
    )
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data=f"info_commands"))
    builder.add(InlineKeyboardButton(text="ü´∂ –†–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞", callback_data=f"reservation_commands"))
    builder.add(InlineKeyboardButton(text="üôã –û—á–µ—Ä–µ–¥—å –Ω–∞ –ø–∞—Ä–∫–æ–≤–∫—É", callback_data=f"queue_commands"))
    builder.add(InlineKeyboardButton(text="ü§ñ –î—Ä—É–≥–æ–µ", callback_data=f"other_commands"))
    builder.adjust(1)
    if is_new:
        await message.answer(**content.as_kwargs(), reply_markup=builder.as_markup())
    else:
        await message.edit_text(**content.as_kwargs(), reply_markup=builder.as_markup())


@router.callback_query(F.data.startswith("info_commands"))
async def info_commands(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥"""
    content = await get_content_text(
        as_marked_section(
            Bold("–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:"),
            as_key_value(Text("‚ÑπÔ∏è ", Code("–º–æ–π —Å—Ç–∞—Ç—É—Å")), "–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—Å –∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è"),
            as_key_value(Text("üó∫Ô∏è ", Code("–ø–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ä—Ç—É –ø–∞—Ä–∫–æ–≤–∫–∏")), "–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞—Ä—Ç—É –ø–∞—Ä–∫–æ–≤–∫–∏ –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç"),
            as_key_value(Text("üó∫Ô∏è ", Code("–ø–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ä—Ç—É –Ω–∞ –∑–∞–≤—Ç—Ä–∞")), "–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞—Ä—Ç—É –ø–∞—Ä–∫–æ–≤–∫–∏ –Ω–∞ –∑–∞–≤—Ç—Ä–∞"),
            as_key_value(Text("üìù ", Code("–ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥")), "–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"),
            marker="‚Ä¢ ", ))
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚ÑπÔ∏è –ú–æ–π —Å—Ç–∞—Ç—É—Å", switch_inline_query_current_chat='–ú–æ–π —Å—Ç–∞—Ç—É—Å'))
    builder.add(InlineKeyboardButton(text="üó∫Ô∏è –ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ä—Ç—É", switch_inline_query_current_chat='–ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ä—Ç—É'))
    builder.add(InlineKeyboardButton(text="üó∫Ô∏è –ö–∞—Ä—Ç–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞",
                                     switch_inline_query_current_chat='–ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ä—Ç—É –Ω–∞ –∑–∞–≤—Ç—Ä–∞'))
    builder.add(InlineKeyboardButton(text="üìù –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥", switch_inline_query_current_chat='–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥'))
    builder.add(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"back_to_main"))
    builder.adjust(1, 2, 1, 1)
    await callback.message.edit_text(**content.as_kwargs(), reply_markup=builder.as_markup())


@router.callback_query(F.data.startswith("reservation_commands"))
async def reservation_commands(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∫–∞–∑–∞ –∫–æ–º–∞–Ω–¥ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ—Å—Ç–∞"""
    content = await get_content_text(
        as_marked_section(
            Bold("–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ—Å—Ç–∞:"),
            as_key_value(Text("ü´∂ ", Code("–±—É–¥—É –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å N –¥–Ω–µ–π")), "–æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç —Å–≤–æ–µ –ø–∞—Ä–∫–æ–≤–æ—á–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞ N –¥–Ω–µ–π"),
            as_key_value(Text("ü´∂ ", Code("–Ω–µ –ø—Ä–∏–µ–¥—É —Å–µ–≥–æ–¥–Ω—è")), "—Ç–æ –∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –∏ '–±—É–¥—É –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å 1 –¥–µ–Ω—å'"),
            as_key_value(Text("üèéÔ∏è ", Code("–≤–µ—Ä–Ω—É–ª—Å—è —Ä–∞–Ω—å—à–µ")), "–≤–æ–∑–æ–±–Ω–æ–≤–ª—è–µ—Ç –≤–∞—à–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–∫–æ–≤–æ—á–Ω–æ–≥–æ –º–µ—Å—Ç–∞"),
            as_key_value(Text("üöó ", Code("–ø—Ä–∏–µ–¥—É —Å–µ–≥–æ–¥–Ω—è")),
                         "–∑–∞–Ω–∏–º–∞–µ—Ç–µ —Ä–∞–Ω–µ–µ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ –∏–ª–∏ –≤—Å—Ç–∞–µ—Ç–µ –≤ –æ—á–µ—Ä–µ–¥—å"),
            marker="‚Ä¢ ", ))
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üöó –ü—Ä–∏–µ–¥—É —Å–µ–≥–æ–¥–Ω—è", switch_inline_query_current_chat='–ü—Ä–∏–µ–¥—É —Å–µ–≥–æ–¥–Ω—è'))
    builder.add(InlineKeyboardButton(text="ü´∂ –ù–µ –ø—Ä–∏–µ–¥—É —Å–µ–≥–æ–¥–Ω—è", switch_inline_query_current_chat='–ù–µ –ø—Ä–∏–µ–¥—É —Å–µ–≥–æ–¥–Ω—è'))
    builder.add(InlineKeyboardButton(text="üèùÔ∏è –ë—É–¥—É –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å N –¥–Ω–µ–π",
                                     switch_inline_query_current_chat='–ú–µ–Ω—è –Ω–µ –±—É–¥–µ—Ç <–ß–ò–°–õ–û> –¥–Ω—è/–¥–Ω–µ–π'))
    builder.add(InlineKeyboardButton(text="üèéÔ∏è –í–µ—Ä–Ω—É–ª—Å—è —Ä–∞–Ω—å—à–µ", switch_inline_query_current_chat='–í–µ—Ä–Ω—É–ª—Å—è —Ä–∞–Ω—å—à–µ'))
    builder.add(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"back_to_main"))
    builder.adjust(1)
    await callback.message.edit_text(**content.as_kwargs(), reply_markup=builder.as_markup())


@router.callback_query(F.data.startswith("queue_commands"))
async def queue_commands(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∫–∞–∑–∞ –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ—á–µ—Ä–µ–¥—å—é"""
    content = await get_content_text(
        as_marked_section(
            Bold("–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ—á–µ—Ä–µ–¥—å—é:"),
            as_key_value(Text("‚ÑπÔ∏è ", Code("–ø–æ–∫–∞–∑–∞—Ç—å –æ—á–µ—Ä–µ–¥—å")),
                         "–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–ª–∏—á–∏–∏ —Å–≤–æ–±–æ–¥–Ω—ã–π –º–µ—Å—Ç –∏ –æ—á–µ—Ä–µ–¥–∏"),
            as_key_value(
                Text("üôã ", Code("—Å–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ"), ' / ', Code("–≤—Å—Ç–∞—Ç—å –≤ –æ—á–µ—Ä–µ–¥—å"), ' / ', Code("–ø—Ä–∏–µ–¥—É —Å–µ–≥–æ–¥–Ω—è")),
                "–¥–æ–±–∞–≤–ª—è–µ—Ç–µ —Å–µ–±—è –≤ –∫–æ–Ω–µ—Ü –æ—á–µ—Ä–µ–¥–∏, –µ—Å–ª–∏ –µ—â–µ –Ω–µ –≤ –Ω–µ–π"),
            as_key_value(Text("‚úã ", Code("–ø–æ–∫–∏–Ω—É—Ç—å –æ—á–µ—Ä–µ–¥—å"), ' / ', Code("–Ω–µ –ø—Ä–∏–µ–¥—É —Å–µ–≥–æ–¥–Ω—è")),
                         "—É–¥–∞–ª—è–µ—Ç–µ —Å–µ–±—è –∏–∑ –æ—á–µ—Ä–µ–¥–∏, –µ—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –Ω–µ–π"),
            marker="‚Ä¢ ", ))
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚ÑπÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å –æ—á–µ—Ä–µ–¥—å", switch_inline_query_current_chat='–ü–æ–∫–∞–∑–∞—Ç—å –æ—á–µ—Ä–µ–¥—å'))
    builder.add(InlineKeyboardButton(text="üôã –í—Å—Ç–∞—Ç—å –≤ –æ—á–µ—Ä–µ–¥—å", switch_inline_query_current_chat='–í—Å—Ç–∞—Ç—å –≤ –æ—á–µ—Ä–µ–¥—å'))
    builder.add(InlineKeyboardButton(text="‚úã –ü–æ–∫–∏–Ω—É—Ç—å –æ—á–µ—Ä–µ–¥—å", switch_inline_query_current_chat='–ü–æ–∫–∏–Ω—É—Ç—å –æ—á–µ—Ä–µ–¥—å'))
    builder.add(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"back_to_main"))
    builder.adjust(1)
    await callback.message.edit_text(**content.as_kwargs(), reply_markup=builder.as_markup())


@router.callback_query(F.data.startswith("other_commands"))
async def other_commands(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∫–∞–∑–∞ –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ—á–µ—Ä–µ–¥—å—é"""
    content = await get_content_text(
        as_marked_section(
            Bold("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:"),
            as_key_value(Text("‚úâÔ∏è ", Code("–Ω–∞–ø–∏—Å–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É <–°–û–û–ë–©–ï–ù–ò–ï>")),
                         "–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –±–æ—Ç–∞"),
            as_key_value(Text("üèÅ ", Code("–ü–æ–∏–≥—Ä–∞—Ç—å –≤ —Ç–µ—Ç—Ä–∏—Å"), " üèéÔ∏è"),
                         "–ø–æ–∏–≥—Ä–∞—Ç—å –≤ –≥–æ–Ω–∫–∏, –∫–∞–∫ –Ω–∞ —Å—Ç–∞—Ä–æ–º –¥–æ–±—Ä–æ–º —Ç–µ—Ç—Ä–∏—Å–µ (/tetris)"),
            marker="‚Ä¢ ", ))
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É",
                                     switch_inline_query_current_chat='–ù–∞–ø–∏—Å–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É <–°–û–û–ë–©–ï–ù–ò–ï>'))
    builder.add(InlineKeyboardButton(text="üèÅ –ü–æ–∏–≥—Ä–∞—Ç—å –≤ —Ç–µ—Ç—Ä–∏—Å üèéÔ∏è", switch_inline_query_current_chat='–¢–µ—Ç—Ä–∏—Å'))
    builder.add(InlineKeyboardButton(text="üîí –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", callback_data=f"restrict_commands"))
    builder.add(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"back_to_main"))
    builder.adjust(1)
    await callback.message.edit_text(**content.as_kwargs(), reply_markup=builder.as_markup())


async def get_content_text(commands):
    content = as_list(
        f"–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–∫–æ–≤–æ—á–Ω—ã—Ö –º–µ—Å—Ç!",
        f"–î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –∫–æ–º–∞–Ω–¥ –≤ —á–∞—Ç:",
        commands,
        HashTag("#commands"),
        sep="\n\n",
    )
    return content


@router.callback_query(F.data.startswith("restrict_commands"), flags={"check_callback": True})
async def restrict_commands(callback: CallbackQuery):
    pass
