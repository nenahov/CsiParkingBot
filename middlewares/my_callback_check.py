import random
from typing import Callable, Awaitable, Dict, Any

from aiogram import BaseMiddleware
from aiogram.dispatcher.flags import get_flag
from aiogram.types import TelegramObject, CallbackQuery


class MyCallbackCheckMiddleware(BaseMiddleware):
    def __init__(self):
        super().__init__()

    async def __call__(
            self,
            handler: Callable[[TelegramObject, Dict[str, Any]], Awaitable[Any]],
            event: TelegramObject,
            data: Dict[str, Any],
    ) -> Any:
        """
        –î–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö callback-–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ —ç—Ç–æ —Ç–æ—Ç —Å–∞–º—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –±—ã–ª–∏ –∫–Ω–æ–ø–∫–∏
        """

        if not isinstance(event, CallbackQuery):
            return await handler(event, data)

        need_check_handler = get_flag(data, "check_callback")
        if not need_check_handler:
            return await handler(event, data)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å data –∏–∑ –∫–æ–ª–±–µ–∫–∞ –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –µ–µ —Å id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_id = event.from_user.id
        callback_data = (event.data + "_").split("_")[1]
        if str(user_id) != callback_data:
            text = await self.get_random_restriction_text()
            await event.answer(text=text, show_alert=True)
            print(
                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} ({event.from_user.full_name}) –ø—ã—Ç–∞–ª—Å—è –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –Ω–µ –¥–ª—è –Ω–µ–≥–æ –∏ –ø–æ–ª—É—á–∏–ª '{text}'")
            return

        return await handler(event, data)

    async def get_random_restriction_text(self):
        # –°–ø–∏—Å–æ–∫ –∏–∑ —Ä–∞–∑–Ω—ã—Ö —Ñ—Ä–∞–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π, –≥–æ–≤–æ—Ä—è—â–∏—Ö, —á—Ç–æ –Ω–µ–ª—å–∑—è –Ω–∞–∂–∏–º–∞—Ç—å —ç—Ç—É –∫–Ω–æ–ø–∫—É
        texts = [
            "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–Ω–æ–ø–∫—É",
            "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É",
            "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å —ç—Ç—É –∫–Ω–æ–ø–∫—É",
            "–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å",
            "–≠—Ç–æ –Ω–∞ –ù–æ–≤—ã–π –≥–æ–¥ üéÖ",
            "–≠—Ç—É –∫–Ω–æ–ø–∫—É –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å",
            "–ù–µ –≤–ª–µ–∑–∞–π - —É–±—å–µ—Ç ‚ö°"
        ]

        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é —Ñ—Ä–∞–∑—É
        return random.choice(texts)
